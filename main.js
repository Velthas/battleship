(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),A=t(667),s=t.n(A),c=new URL(t(596),t.b),l=i()(o()),d=s()(c);l.push([n.id,":root {\n  --board-labels-color: #a0a0a0;\n  --water-tile: #c9daf8;\n  --water-tile-hover: #b6cdf5;\n  --carrier: #cf53d1;\n  --carrier-hover: #ac47ad;\n  --destroyer: #44bdc6;\n  --destroyer-hover: #389ca3;\n  --submarine: #34a853;\n  --submarine-hover: #288140;\n  --battleship: #fbbc03;\n  --battleship-hover: #b38d1b;\n  --cruiser: #ff6c00;\n  --cruiser-hover: #b34d05;\n  --your-board: #fb004c;\n  --opponent-board: #646f8b;\n  --hit-ship-color: #fb004c;\n  --miss-shot-color: #497dcb;\n  --font-stack: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; \n\n}\n\nbody, \nhtml {\n  width: 100%;\n  height: 100%;\n\n  margin: 0;\n  padding: 0;\n\n  box-sizing: border-box;\n}\n\n@font-face {\n  font-family: gunplay;\n  src: url("+d+");\n}\n\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: gunplay;\n}\n\n.header h1 {\n  font-size: 80px;\n  margin-top: 15px;\n  letter-spacing: 10px;\n  font-weight: normal;\n}\n\n.status {\n  grid-column: 1 / 3;\n\n  display: grid;\n  grid-template: 25px 25px / repeat(3, 50px);\n  column-gap: 15px;\n\n  align-items: center;\n  justify-content: center;\n}\n\np.legend {\n  text-align: center;\n  text-transform: uppercase;\n  margin: 0;\n}\n\ndiv.legend:nth-child(4) {\n  background-color: var(--water-tile);\n}\n\ndiv.legend:nth-child(5) {\n background: var(--hit-ship-color);\n}\n\ndiv.legend:nth-child(6) {\nbackground: var(--miss-shot-color);\n}\n\ndiv.legend:nth-child(4),\ndiv.legend:nth-child(5),\ndiv.legend:nth-child(6) {\n  height: 100%;\n  width: 25px;\n  justify-self: center;\n}\n\n.gameboards {\n  grid-column: 1 / 3;\n  grid-row: 2 / 3;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 100px;\n\n  padding: 20px;\n}\n\n.your-board,\n.opponent {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 10px 20px;\n  border-radius: 8px;\n\n  font-family: var(--font-stack);\n  font-weight: bold;\n  color: whitesmoke;\n}\n\n.your-board {\n  background-color: var(--your-board);\n}\n\n.opponent {\n  background-color: var(--opponent-board);\n}\n\n#friendly-sea, \n#enemy-sea {\n  display: grid;\n  grid-template: repeat(12, 1fr) / repeat(12, 1fr);\n\n  height: 400px;\n  width: 400px;\n}\n\n#enemy-board,\n#player-board {\n  grid-column: 2 / 12;\n  grid-row: 2 / 12;\n\n  display: grid;\n  grid-template-rows: repeat(10, 1fr);\n  grid-template-columns: repeat(10, 1fr);\n  grid-gap: 1px;\n\n  background-color: whitesmoke;\n}\n\n.tile {\n  background-color: var(--water-tile);\n  cursor: pointer;\n}\n\n.tile.hit {\n  background-color: var(--miss-shot-color);\n}\n\n.tile.hit.ship {\n  background-color: var(--hit-ship-color);\n}\n\n.tile:hover {\n  background-color: var(--water-tile-hover);\n}\n\n.upperRow {   \n  grid-column: 1 / 13;\n\n  display: grid;\n  grid-template-rows: 1fr;\n  grid-template-columns: repeat(12, 1fr);\n}\n\n.leftRow {\n  grid-column: 1 / 2;\n  grid-row: 2 / 12;\n\n  display: grid;\n  grid-template-rows: repeat(10, 1fr);\n  grid-template-columns: 1fr;\n}\n\n.rightRow {\n  grid-row: 2 / 12;\n  grid-column: 12 / 13;\n\n  display: grid;\n  grid-template-rows: repeat(10, 1fr);\n  grid-template-columns: 1fr;\n}\n\n.lowerRow {\n  grid-row: 12 / 13;\n  grid-column: 1 / 13;\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  grid-template-rows: 1fr;\n}\n\n.letter-tile,\n.number-tile {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: var(--board-labels-color);\n  font-weight: bold;\n  font-family: monospace, Arial, Helvetica, sans-serif;\n}\n\n.reset {\n  height: 400px;\n  width: 400px;\n  background-color: whitesmoke;\n  box-shadow: 0px 5px 4px grey;\n\n\n  border-left: 20px solid var(--opponent-board);\n  border-radius: 8px;\n\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  display: flex; \n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.reset h1 {\n  color: #fb004c;\n  margin-bottom: 5px;\n\n  text-transform: uppercase\n}\n\n.reset p {\n  padding: 20px;\n  \n  color: #0c0b0b;\n  text-align: center;\n  font-size: large;\n}\n\ndiv.reset button,\ndiv.place-ships button {\n  padding: 15px 10px;\n  margin-top: 20px;\n  width: 150px;\n  \n\n  border: 1px solid #fb004c;\n  border-radius: 8px;\n  box-shadow: 0px 4px 1px #911f41;\n\n  background-color: var(--your-board);\n  color: white;\n\n  font-family: var(--font-stack);\n  font-size: large;\n  text-transform: uppercase;\n  font-weight: bold;\n\n  cursor: pointer;\n}\n\ndiv.reset button:focus {\n  transform: translateY(4px);\n  box-shadow: none;\n}\n\n.place-container {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  -webkit-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n\n  width: 100%;\n  height: 100%;\n\n  background-color: rgba(0, 0, 0, 0.247);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.place-ships {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n\n  background-color: whitesmoke;\n  box-shadow: 0px 5px 5px #706565;\n\n  border-radius: 8px;\n}\n\n.place-ships h1 {\n  font-family: 'Gunplay', var(--font-stack);\n  font-weight: normal;\n  letter-spacing: 2px;\n}\n\n.mock-grid {\n  width: 350px;\n  height: 350px;\n\n  display: grid;\n  grid-template: repeat(10, 1fr) / repeat(10, 1fr);\n  gap: 1px;\n\n  padding: 30px;\n}\n\n.ship-preview {\n  position: absolute;\n}\n\n.carrier {\n  background-color: var(--carrier);\n}\n\n.carrier:hover {\n  background-color: var(--carrier-hover);\n}\n\n.battleship {\n  background-color: var(--battleship);\n}\n\n.battleship:hover {\n  background-color: var(--battleship-hover);\n}\n\n.submarine {\n  background-color: var(--submarine);\n}\n\n.submarine:hover {\n  background-color: var(--submarine-hover);\n}\n\n.destroyer {\n  background-color: var(--destroyer);\n}\n\n.destroyer:hover {\n  background-color: var(--destroyer-hover);\n}\n\n.patroller {\n  background-color: var(--cruiser);\n}\n\n.patroller:hover {\n  background-color: var(--cruiser-hover);\n}\n\n.place-ships button {\n  margin: 20px 10px;\n  padding: 15px 10px;\n\n  width: 150px;\n\n  border: none;\n  border-radius: 8px;\n\n  text-transform: uppercase;\n  font-size: 18px;\n  color: white;\n  font-weight: 700;\n\n  background-color: var(--your-board);\n}\n\n.footer {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  background-color: whitesmoke;\n \n}\n\na {\n  text-decoration: none;\n  color: var(--your-board);\n}\n\na:hover {\n  color: var(--hit-ship-color);\n}\n\n@media (max-width: 930px) {\n  .header h1 {\n    font-size: 50px;\n  }\n\n  .gameboards {\n    flex-direction: column;\n    gap: 20px;\n    padding: 10px 0;\n  }\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:[":root {\n  --board-labels-color: #a0a0a0;\n  --water-tile: #c9daf8;\n  --water-tile-hover: #b6cdf5;\n  --carrier: #cf53d1;\n  --carrier-hover: #ac47ad;\n  --destroyer: #44bdc6;\n  --destroyer-hover: #389ca3;\n  --submarine: #34a853;\n  --submarine-hover: #288140;\n  --battleship: #fbbc03;\n  --battleship-hover: #b38d1b;\n  --cruiser: #ff6c00;\n  --cruiser-hover: #b34d05;\n  --your-board: #fb004c;\n  --opponent-board: #646f8b;\n  --hit-ship-color: #fb004c;\n  --miss-shot-color: #497dcb;\n  --font-stack: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; \n\n}\n\nbody, \nhtml {\n  width: 100%;\n  height: 100%;\n\n  margin: 0;\n  padding: 0;\n\n  box-sizing: border-box;\n}\n\n@font-face {\n  font-family: gunplay;\n  src: url(./fonts/gunplay3d.ttf);\n}\n\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: gunplay;\n}\n\n.header h1 {\n  font-size: 80px;\n  margin-top: 15px;\n  letter-spacing: 10px;\n  font-weight: normal;\n}\n\n.status {\n  grid-column: 1 / 3;\n\n  display: grid;\n  grid-template: 25px 25px / repeat(3, 50px);\n  column-gap: 15px;\n\n  align-items: center;\n  justify-content: center;\n}\n\np.legend {\n  text-align: center;\n  text-transform: uppercase;\n  margin: 0;\n}\n\ndiv.legend:nth-child(4) {\n  background-color: var(--water-tile);\n}\n\ndiv.legend:nth-child(5) {\n background: var(--hit-ship-color);\n}\n\ndiv.legend:nth-child(6) {\nbackground: var(--miss-shot-color);\n}\n\ndiv.legend:nth-child(4),\ndiv.legend:nth-child(5),\ndiv.legend:nth-child(6) {\n  height: 100%;\n  width: 25px;\n  justify-self: center;\n}\n\n.gameboards {\n  grid-column: 1 / 3;\n  grid-row: 2 / 3;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 100px;\n\n  padding: 20px;\n}\n\n.your-board,\n.opponent {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 10px 20px;\n  border-radius: 8px;\n\n  font-family: var(--font-stack);\n  font-weight: bold;\n  color: whitesmoke;\n}\n\n.your-board {\n  background-color: var(--your-board);\n}\n\n.opponent {\n  background-color: var(--opponent-board);\n}\n\n#friendly-sea, \n#enemy-sea {\n  display: grid;\n  grid-template: repeat(12, 1fr) / repeat(12, 1fr);\n\n  height: 400px;\n  width: 400px;\n}\n\n#enemy-board,\n#player-board {\n  grid-column: 2 / 12;\n  grid-row: 2 / 12;\n\n  display: grid;\n  grid-template-rows: repeat(10, 1fr);\n  grid-template-columns: repeat(10, 1fr);\n  grid-gap: 1px;\n\n  background-color: whitesmoke;\n}\n\n.tile {\n  background-color: var(--water-tile);\n  cursor: pointer;\n}\n\n.tile.hit {\n  background-color: var(--miss-shot-color);\n}\n\n.tile.hit.ship {\n  background-color: var(--hit-ship-color);\n}\n\n.tile:hover {\n  background-color: var(--water-tile-hover);\n}\n\n.upperRow {   \n  grid-column: 1 / 13;\n\n  display: grid;\n  grid-template-rows: 1fr;\n  grid-template-columns: repeat(12, 1fr);\n}\n\n.leftRow {\n  grid-column: 1 / 2;\n  grid-row: 2 / 12;\n\n  display: grid;\n  grid-template-rows: repeat(10, 1fr);\n  grid-template-columns: 1fr;\n}\n\n.rightRow {\n  grid-row: 2 / 12;\n  grid-column: 12 / 13;\n\n  display: grid;\n  grid-template-rows: repeat(10, 1fr);\n  grid-template-columns: 1fr;\n}\n\n.lowerRow {\n  grid-row: 12 / 13;\n  grid-column: 1 / 13;\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  grid-template-rows: 1fr;\n}\n\n.letter-tile,\n.number-tile {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: var(--board-labels-color);\n  font-weight: bold;\n  font-family: monospace, Arial, Helvetica, sans-serif;\n}\n\n.reset {\n  height: 400px;\n  width: 400px;\n  background-color: whitesmoke;\n  box-shadow: 0px 5px 4px grey;\n\n\n  border-left: 20px solid var(--opponent-board);\n  border-radius: 8px;\n\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  display: flex; \n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.reset h1 {\n  color: #fb004c;\n  margin-bottom: 5px;\n\n  text-transform: uppercase\n}\n\n.reset p {\n  padding: 20px;\n  \n  color: #0c0b0b;\n  text-align: center;\n  font-size: large;\n}\n\ndiv.reset button,\ndiv.place-ships button {\n  padding: 15px 10px;\n  margin-top: 20px;\n  width: 150px;\n  \n\n  border: 1px solid #fb004c;\n  border-radius: 8px;\n  box-shadow: 0px 4px 1px #911f41;\n\n  background-color: var(--your-board);\n  color: white;\n\n  font-family: var(--font-stack);\n  font-size: large;\n  text-transform: uppercase;\n  font-weight: bold;\n\n  cursor: pointer;\n}\n\ndiv.reset button:focus {\n  transform: translateY(4px);\n  box-shadow: none;\n}\n\n.place-container {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  -webkit-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n\n  width: 100%;\n  height: 100%;\n\n  background-color: rgba(0, 0, 0, 0.247);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.place-ships {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n\n  background-color: whitesmoke;\n  box-shadow: 0px 5px 5px #706565;\n\n  border-radius: 8px;\n}\n\n.place-ships h1 {\n  font-family: 'Gunplay', var(--font-stack);\n  font-weight: normal;\n  letter-spacing: 2px;\n}\n\n.mock-grid {\n  width: 350px;\n  height: 350px;\n\n  display: grid;\n  grid-template: repeat(10, 1fr) / repeat(10, 1fr);\n  gap: 1px;\n\n  padding: 30px;\n}\n\n.ship-preview {\n  position: absolute;\n}\n\n.carrier {\n  background-color: var(--carrier);\n}\n\n.carrier:hover {\n  background-color: var(--carrier-hover);\n}\n\n.battleship {\n  background-color: var(--battleship);\n}\n\n.battleship:hover {\n  background-color: var(--battleship-hover);\n}\n\n.submarine {\n  background-color: var(--submarine);\n}\n\n.submarine:hover {\n  background-color: var(--submarine-hover);\n}\n\n.destroyer {\n  background-color: var(--destroyer);\n}\n\n.destroyer:hover {\n  background-color: var(--destroyer-hover);\n}\n\n.patroller {\n  background-color: var(--cruiser);\n}\n\n.patroller:hover {\n  background-color: var(--cruiser-hover);\n}\n\n.place-ships button {\n  margin: 20px 10px;\n  padding: 15px 10px;\n\n  width: 150px;\n\n  border: none;\n  border-radius: 8px;\n\n  text-transform: uppercase;\n  font-size: 18px;\n  color: white;\n  font-weight: 700;\n\n  background-color: var(--your-board);\n}\n\n.footer {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  background-color: whitesmoke;\n \n}\n\na {\n  text-decoration: none;\n  color: var(--your-board);\n}\n\na:hover {\n  color: var(--hit-ship-color);\n}\n\n@media (max-width: 930px) {\n  .header h1 {\n    font-size: 50px;\n  }\n\n  .gameboards {\n    flex-direction: column;\n    gap: 20px;\n    padding: 10px 0;\n  }\n}"],sourceRoot:""}]);const p=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],A=0;A<n.length;A++){var s=n[A],c=r.base?s[0]+r.base:s[0],l=a[c]||0,d="".concat(c," ").concat(l);a[c]=l+1;var p=t(d),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var h=o(u,r);r.byIndex=A,e.splice(A,0,{identifier:d,updater:h,references:1})}i.push(d)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var s=r(n,o),c=0;c<a.length;c++){var l=t(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},596:(n,e,t)=>{n.exports=t.p+"d5744f2c53fd74cef4e0.ttf"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),A=t(565),s=t.n(A),c=t(216),l=t.n(c),d=t(589),p=t.n(d),u=t(426),h={};h.styleTagTransform=p(),h.setAttributes=s(),h.insert=i().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=l(),e()(u.Z,h),u.Z&&u.Z.locals&&u.Z.locals;const E=function(n,e){let t=1===n;const r=e,o=function(n){const e=n,t=[];let r;const o=[[[-1,0],[-2,0],[-3,0],[-4,0]],[[1,0],[2,0],[3,0],[4,0]],[[0,-1],[0,-2],[0,-3],[0,-4]],[[0,1],[0,2],[0,3],[0,4]]],a=function(n){return n[0]>=0&&n[0]<10&&n[1]>=0&&n[1]<10&&!e.getBoard()[n[0]][n[1]].isHit()},i=function(n){t.splice(n,1)},A=function(){const{length:n}=t;r=0===n?null:Math.floor(Math.random()*(n-1))};return{hasMovesToPlay:function(){return 0!==t.length},initialize:function(n){!function(n){const e=n[0],r=n[1];o.forEach((n=>{const o=[];for(let t=0;t<n.length;t++){const i=n[t][0],A=n[t][1],s=e+i,c=r+A;if(!a([s,c]))break;o.push([s,c])}const i=o.filter(a);i.length>0&&t.push(i)}))}(n),A()},getMove:function(){const n=t[r][0],o=function(n){return e.getBoard()[n[0]][n[1]].hasShip()}(n);return o?(t[r].shift(),0===t[r].length&&(i(r),A()),n):(i(r),A(),n)}}}(r),a=function(n){return!1!==t&&!r.getBoard()[n[0]][n[1]].isHit()&&(r.receiveAttack(n),!0)};return{playTurn:a,playRandomMove:function(){if(o.hasMovesToPlay()){const n=o.getMove();return a([n[0],n[1]]),n}const n=e.getUnplayedTiles(),t=n[Math.floor(Math.random()*n.length)],r=t>=10?Number(t.toString()[1]):t,i=t>=10?Number(t.toString()[0]):0;return a([i,r]),e.getBoard()[i][r].hasShip()&&o.initialize([i,r]),[i,r]},turnOver:function(){t=!1},isTurn:function(){t=!0},turnState:function(){return t}}},g=function(n){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"horizontal",t=arguments.length>2?arguments[2]:void 0;const r=t||"",o=e,a=[[[0,0]],[[0,0],[0,1]],[[0,0],[0,1],[0,2]],[[0,0],[0,1],[0,2],[0,3]],[[0,0],[0,1],[0,2],[0,3],[0,4]]],i=[[[0,0]],[[0,0],[1,0]],[[0,0],[1,0],[2,0]],[[0,0],[1,0],[2,0],[3,0]],[[0,0],[1,0],[2,0],[3,0],[4,0]]],A=()=>"horizontal"===o?a[n-1]:i[n-1],s=[];function c(e){if(e>n-1||e<0)return;const t=A();return s.push(t[e]),t[e]}function l(){return s.length===n}function d(){return r}return{hit:c,isSunk:l,getOffsets:A,getName:d}},f=function(){let n=!1,e=!1;const t=()=>!1!==e;return{isHit:()=>n,setHit:()=>{n||(e&&e.reference.hit(e.position),n=!0)},setShip:(n,t)=>{e={reference:n,position:t}},hasShip:t,getShip:()=>{if(t())return e}}},C=function(){const n=(()=>{const n=[];for(let e=0;e<10;e++){const e=[];for(let n=0;n<10;n++){const n=f();e.push(n)}n.push(e)}return n})(),e=[],t=Array.from(Array(100).keys()),r=(e,t)=>{const r=e[1],o=e[0];return t.filter((e=>{const t=e[1],a=e[0],i=r+t,A=o+a;return i<10&&i>=0&&A<10&&A>=0&&!1===n[A][i].hasShip()})).length===t.length},o=(t,o)=>{const a=t,i=a.getOffsets();r(o,i)&&(i.forEach(((e,t)=>{const r=[o[0]+e[0],o[1]+e[1]];n[r[0]][r[1]].setShip(a,t)})),e.push(a))},a=function(n){const e=n[1]+10*n[0];t.splice(t.indexOf(e),1)};return{placeShip:o,placeShipsRandomly:function(){const n=[5,4,3,3,2],t=[];for(let e=0;e<5;e++){const r=2*Math.random()>1?"horizontal":"vertical",o=g(n[e],r);t.push(o)}for(;e.length<5;){const n=Math.floor(9*Math.random()),r=Math.floor(9*Math.random());o(t[e.length],[r,n])}return e.length},createUserShips:function(){const n=[5,4,3,3,2],e=[],t=[],r=["Carrier","Battleship","Destroyer","Submarine","Patroller"];for(let o=0;o<n.length;o++)e.push(g(n[o],"vertical",r[o])),t.push(g(n[o],"horizontal",r[o]));return[t,e]},isPositionLegal:r,getBoard:()=>n,receiveAttack:function(e){n[e[0]][e[1]].setHit(),a(e)},markTileAsPlayed:a,getUnplayedTiles:function(){return t},allShipsSunk:function(){return e.filter((n=>n.isSunk())).length===e.length}}},m=function(){const n=document.querySelector("#friendly-sea"),e=document.querySelector("#enemy-sea"),t=function(n,e){const t=document.querySelector(n),r=Array.from(t.querySelectorAll("div.tile")),o=e.getBoard();for(let n=0;n<10;n++)for(let e=0;e<10;e++)if(o[n][e].hasShip()){const t=o[n][e].getShip().reference.getName().toLowerCase();r[10*n+e].classList.add(t)}};return{createGridDivs:function(){const t=document.createElement("div");t.setAttribute("id","enemy-board");const r=document.createElement("div");r.setAttribute("id","player-board");for(let n=0;n<100;n++){const n=document.createElement("div");n.classList.add("tile");const e=document.createElement("div");e.classList.add("tile"),t.appendChild(n),r.appendChild(e)}n.appendChild(r),e.appendChild(t)},addEventListenersToEnemyBoard:function(n){Array.from(document.querySelectorAll("#enemy-board div")).forEach(((e,t)=>{e.addEventListener("click",(()=>{const e=t>=10?Number(t.toString()[1]):t,r=t>=10?Number(t.toString()[0]):0;n([r,e])}))}))},markHit:function(n,e,t){const r=n.getBoard()[e[0]][e[1]];if(!r.isHit())return;const o=10*e[0],a=e[1]+o,i=`#${t} div`,A=Array.from(document.querySelectorAll(i));r.hasShip()?(A[a].classList.add("hit"),A[a].classList.add("ship")):A[a].classList.add("hit")},deleteExistingBoards:function(){const t=n.querySelector("#player-board"),r=e.querySelector("#enemy-board");t&&t.remove(),r&&r.remove()},createResetDiv:function(n,e){const t=document.createElement("div");t.classList.add("reset");const r=document.createElement("h1");r.textContent=n?"You win":"You lose",t.appendChild(r);const o=document.createElement("p");o.textContent=n?"We got them! Well done, admiral. Shall we try again?":"Seems like we lost this time. Would you like another try, admiral?",t.appendChild(o);const a=document.createElement("button");a.addEventListener("click",(()=>{t.remove(),e()})),a.textContent="Restart",t.appendChild(a),document.querySelector("body").appendChild(t)},setFriendlyBoard:function(n,e){let r=0,o="horizontal";const a=e[1],i=e[0],A=document.createElement("div");A.classList.add("place-container");const s=document.createElement("div");s.classList.add("place-ships"),A.appendChild(s);const c=document.createElement("h1");c.textContent="PLACE YOUR SHIPS",s.appendChild(c);const l=document.createElement("p");l.textContent="Please place your Carrier",s.appendChild(l);const d=document.createElement("div");d.classList.add("mock-grid");for(let e=0;e<100;e++){const s=document.createElement("div");s.classList.add("tile"),s.addEventListener("mouseenter",(()=>{const n=document.querySelector(".ship-preview");n&&n.remove();const e=document.createElement("div");e.classList.add("ship-preview"),e.classList.add(`${i[r].getName().toLowerCase()}`);const t=i[r].getOffsets().length;"horizontal"===o?e.setAttribute("style",`width:${35*t}px; height:35px;`):e.setAttribute("style",`width:35px; height:${35*t}px;`),s.appendChild(e)})),s.addEventListener("click",(()=>{const s=e>9?Number(e.toString()[0]):0,c=e<10?e:Number(e.toString()[1]),d="horizontal"===o?i[r]:a[r];n.isPositionLegal([s,c],d.getOffsets())&&(n.placeShip(d,[s,c]),t(".mock-grid",n),r+=1,r<i.length&&(l.textContent=`Please place your ${i[r].getName()}`)),r===i.length&&(A.remove(),m.displayFleet("#player-board",n))})),d.appendChild(s)}s.appendChild(d);const p=document.createElement("button");p.addEventListener("click",(()=>{const n=document.querySelector(".ship-preview");n&&n.remove(),o="horizontal"===o?"vertical":"horizontal"})),p.textContent="Rotate",s.appendChild(p),document.querySelector("body").appendChild(A)},displayFleet:t}}();(function(){let n,e,t,r,o,a=!1;const i=function(o){if(a)return;if(!t.playTurn(o))return;if(m.markHit(e,o,"enemy-board"),t.turnOver(),A())return s("Player"),void l();r.isTurn();const i=r.playRandomMove();if(m.markHit(n,i,"player-board"),r.turnOver(),A())return s("CPU"),void l();t.isTurn()},A=function(){return!(!n.allShipsSunk()&&!e.allShipsSunk()&&0!==n.getUnplayedTiles().length&&0!==e.getUnplayedTiles().length)},s=function(n){o=n},c=function(){n=C(),e=C(),t=E(1,e),r=E(2,n),a=!1,m.deleteExistingBoards(),m.createGridDivs(),m.addEventListenersToEnemyBoard(i),e.placeShipsRandomly(),m.setFriendlyBoard(n,n.createUserShips())},l=function(){a=!0;const n="Player"===o;m.createResetDiv(n,c)};return{startGame:c}})().startGame()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,